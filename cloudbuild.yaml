steps:
  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '$_REGION_NAME-docker.pkg.dev/${PROJECT_ID}/$_REPO_NAME/$_IMAGE_NAME', './app']

  # Docker Push
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '$_REGION_NAME-docker.pkg.dev/${PROJECT_ID}/$_REPO_NAME/$_IMAGE_NAME']

  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    id: 'Cloud-deploy'
    entrypoint: bash
    args: 
      - '-c'
      - gcloud deploy releases create $_BUILD_NAME-${SHORT_SHA} --project=$PROJECT_ID --region=$_REGION_NAME --delivery-pipeline=$_PIPELINE_NAME --skaffold-file=./skaffold.yaml

#--images=gcr.io/$PROJECT_ID/$_REPO_NAME=gcr.io/$PROJECT_ID/$_REPO_NAME:$SHORT_SHA

# images:
# #  - 'gcr.io/$PROJECT_ID/$_REPO_NAME:$SHORT_SHA'
#   - '$_REGION_NAME-docker.pkg.dev/${PROJECT_ID}/$_REPO_NAME/$_IMAGE_NAME'
#$PROJECT_ID/$_REPO_NAME:$SHORT_SHA
options:
  logging: CLOUD_LOGGING_ONLY
  
substitutions:
  #  _LOCATION: us-central1
  _REPO_NAME: flask-app # Default value
  _IMAGE_NAME: flask-img
  _REGION_NAME: us-central1
  _PIPELINE_NAME: gke-flask-pipeline
  _TAG: latest
  _BUILD_NAME: my-release-001

# when build repo and push 
# steps:
#   - name: 'gcr.io/cloud-builders/docker'
#     id: 'Build-push-flask-image'
#     entrypoint: 'bash'
    # args:
    #   - '-c'
    #   - |
    #     echo "Building Docker image"
    #     docker build -t gcr.io/$PROJECT_ID/$_REPO_NAME:$SHORT_SHA ./app
    #     docker push gcr.io/$PROJECT_ID/$_REPO_NAME:$SHORT_SHA
