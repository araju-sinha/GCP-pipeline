steps:
  - name: 'gcr.io/cloud-builders/docker'
    id: Image Build
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/$_REPO_NAME:$SHORT_SHA', './app']

  - name: 'gcr.io/cloud-builders/docker'
    id: Image Push to Artifact Registry
    args: ['push', 'gcr.io/$PROJECT_ID/$_REPO_NAME:$SHORT_SHA']

images:
  - 'gcr.io/$PROJECT_ID/$_REPO_NAME:$SHORT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY

#gcr.io/gke-k8-terra/flask-img

# steps:
#   - name: 'gcr.io/cloud-builders/docker'
#     id: Image Build
#     args: ['build', '-t', '$_LOCATION-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME:base-image', './app']

#   - name: 'gcr.io/cloud-builders/docker'
#     id: Image Push to Artifact Registry
#     args: ['push', '$_LOCATION-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME:base-image',]

# images:
#   - '$_LOCATION-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME:base-image'

substitutions:
#  _LOCATION: us-central1
  _REPO_NAME: flask-app # Default value

# options:
#   logging: CLOUD_LOGGING_ONLY

#us-central1-docker.pkg.dev/gke-k8-terra/webapp
# 'gcr.io/$PROJECT_ID/my-app',

